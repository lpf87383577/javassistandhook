apply plugin: 'com.android.application'

apply plugin: 'com.lpf.plugin'

class Myplugin implements Plugin<Project> {

    @Override
    void apply(Project target) {
        //将自定义参数类和用户设置的参数进行绑定（将hencoder里面的参数映射到ExtensionDemo类的属性里面）
        //返回的值是一个ExtensionDemo类的实例，里面属性就是用户定义的hencoder的参数
        def extension = target.extensions.create('hencoder',ExtensionDemo)

        target.afterEvaluate {
            println "hellow ${extension.name}"
        }
    }
}

//自定义参数类
class ExtensionDemo{
    //设置默认值
    def name = 'Author'
}

//引入plugin
apply plugin: Myplugin

//自定义参数
hencoder{
    name '------liupengfei-------'
}

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.0"


    defaultConfig {
        applicationId "com.shinhoandroid.testplugin"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

println "hello world11111"

task hello{

    doFirst{
        println("doFirst")
    }

    //这段代码不包含在action里面，写在task里面和外面没有区别
    println "hello world2222"

    doLast{
        println("doLast")
    }

}
/**先添加的doFirst动作后执行，先添加的doLast动作先执行*/
hello.doFirst { println "Second action" }
hello.doFirst { println "First action" }
hello.doLast { println "Not Last action" }
hello.doLast { println "Last action" }